# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

dotenv: [".env"]

vars:
  CONTAINER_NAME: ptms_postgres
  CONTAINER_IMAGE: postgres:16-alpine3.20
  DSN: postgres://$DB_USER:$DB_PASS@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=disable
  MIGRATIONS_DIR: db/migrations

tasks:
  postgres:
    aliases: ["db"]
    cmd: $CONTAINER run -d --rm --network host --name {{.CONTAINER_NAME}} -e POSTGRES_PASSWORD="$DB_PASS" -v ./postgresql.conf:/etc/postgresql/postgresql.conf:Z {{.CONTAINER_IMAGE}} -c 'config_file=/etc/postgresql/postgresql.conf'
    requires:
      vars: [CONTAINER, DB_PASS]
  migration:
    cmd: migrate create -ext sql -dir {{.MIGRATIONS_DIR}} -seq {{.CLI_ARGS}}
  migrate:
    cmd: migrate -database {{.DSN}} -path {{.MIGRATIONS_DIR}} up {{.CLI_ARGS}}
    requires:
      vars: [DB_USER, DB_PASS, DB_HOST, DB_PORT, DB_NAME]
  rollback:
    cmd: migrate -database {{.DSN}} -path {{.MIGRATIONS_DIR}} down {{.CLI_ARGS}}
    requires:
      vars: [DB_USER, DB_PASS, DB_HOST, DB_PORT, DB_NAME]
  generate:
    aliases: ["gen"]
    cmd: export DSN="{{.DSN}}"; sqlc generate
    requires:
      vars: [DSN]
  setup_test:
    vars:
      DB_NAME: test
      DSN: postgres://$DB_USER:$DB_PASS@$DB_HOST:$DB_PORT/{{.DB_NAME}}?sslmode=disable
    cmds:
      - $CONTAINER exec -it {{.CONTAINER_NAME}} psql -U $DB_USER -w -c "CREATE DATABASE {{.DB_NAME}};"
      - migrate -database {{.DSN}} -path {{.MIGRATIONS_DIR}} up
  test:
    env:
      APP_ENV: test
      DB_NAME: test
    cmd: clear && go test -race ./...
  security:
    aliases: ["sec"]
    cmd: gosec ./...
  critic:
    aliases: ["crit"]
    cmd: gocritic check ./...
  tools:
    cmds:
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - for:
          [
            "github.com/sqlc-dev/sqlc/cmd/sqlc@latest",
            "github.com/air-verse/air@v1.52.2",
            "github.com/securego/gosec/v2/cmd/gosec@latest",
            "github.com/go-critic/go-critic/cmd/gocritic@latest",
          ]
        cmd: go install {{.ITEM}}
  dev:
    cmd: air
