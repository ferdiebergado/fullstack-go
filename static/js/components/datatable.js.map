{
  "version": 3,
  "sources": ["../../../assets/js/components/datatable.js"],
  "sourcesContent": ["// @ts-check\nconst table = document.getElementById('data-table');\nconst tableHead = table?.querySelector('thead');\nconst tableBody = table?.querySelector('tbody');\nconst columnsAttr = table?.getAttribute('data-columns');\nconst apiUrl = table?.getAttribute('data-url');\nconst firstBtn = document.getElementById('firstPage');\nconst prevBtn = document.getElementById('prevPage');\nconst nextBtn = document.getElementById('nextPage');\nconst lastBtn = document.getElementById('lastPage');\nconst pagination = document.getElementById('pagination');\nconst pageInput = document.getElementById('page');\nconst pageInfo = document.getElementById('pageInfo');\nconst recordsPerPageSelect = document.getElementById('recordsPerPage');\nconst totalPagesSpan = document.getElementById('totalPages');\n\n/** @type {HTMLSelectElement} */\nconst filterSelect = document.getElementById('filter');\n\nlet currentPage = 1;\nlet rowsPerPage = 10;\nlet totalPages = 1;\n/** @type {string[]} */\nlet columns = [];\nlet allData = [];\nlet sortDirection = 1;\nlet sortColumn = '';\n\nfunction initializePager() {\n  // First and Previous buttons\n  firstBtn?.addEventListener('click', () => {\n    currentPage = 1;\n    fetchAndDisplayData();\n  });\n\n  prevBtn?.addEventListener('click', () => {\n    currentPage--;\n    fetchAndDisplayData();\n  });\n\n  // Next and Last buttons\n  nextBtn?.addEventListener('click', () => {\n    currentPage++;\n    fetchAndDisplayData();\n  });\n\n  lastBtn?.addEventListener('click', () => {\n    currentPage = totalPages;\n    fetchAndDisplayData();\n  });\n}\n\nfunction setupPageInput() {\n  // Jump to page input\n  pageInput?.addEventListener('change', (e) => {\n    const page = Number(e.target?.value);\n    if (page >= 1 && page <= totalPages) {\n      currentPage = page;\n      fetchAndDisplayData();\n    }\n  });\n}\n\nfunction initTable() {\n  columns = columnsAttr?.split(',') || [];\n\n  document\n    .getElementById('search')\n    ?.addEventListener('input', debounce(fetchAndDisplayData, 300));\n\n  recordsPerPageSelect?.addEventListener('change', async () => {\n    rowsPerPage = parseInt(recordsPerPageSelect.value);\n    currentPage = 1;\n    fetchAndDisplayData();\n  });\n\n  const optionsFragment = document.createDocumentFragment();\n\n  columns.forEach((col) => {\n    const filterOpt = document.createElement('option');\n    filterOpt.value = col;\n    filterOpt.textContent = col;\n    optionsFragment.appendChild(filterOpt);\n  });\n\n  filterSelect.innerHTML = '';\n  filterSelect.appendChild(optionsFragment);\n\n  initializePager();\n  setupPageInput();\n  fetchAndDisplayData();\n}\n\nfunction fetchAndDisplayData() {\n  const searchQuery = document\n    .getElementById('search')\n    ?.value.trim()\n    .toLowerCase();\n\n  const params = new URLSearchParams({\n    page: String(currentPage),\n    limit: String(rowsPerPage),\n    sort: sortColumn,\n    sortDir: String(sortDirection),\n    search: searchQuery,\n  });\n\n  fetch(`${apiUrl}?${params.toString()}`)\n    .then((response) => response.json())\n    .then((payload) => {\n      const { total_items, total_pages, page, data } = payload.data;\n\n      allData = data;\n      totalPages = total_pages;\n      currentPage = page;\n      createTable(columns, allData);\n      updatePaginationInfo(total_items, currentPage, totalPages);\n    })\n    .catch((error) => console.error('Error fetching data:', error));\n}\n\nfunction createTable(columns, data) {\n  if (!tableHead?.children.length) {\n    tableHead.innerHTML = '';\n    const headerRow = document.createElement('tr');\n    columns.forEach((col) => {\n      const th = document.createElement('th');\n      th.textContent = col.toUpperCase();\n      th.addEventListener('click', () => sortTable(col));\n      headerRow.appendChild(th);\n    });\n    tableHead?.appendChild(headerRow);\n  }\n\n  const bodyFragment = document.createDocumentFragment();\n  data.forEach((row) => {\n    const tr = document.createElement('tr');\n    columns.forEach(\n      /** @param {string} col */ (col) => {\n        const td = document.createElement('td');\n        td.textContent = row[col.trim()];\n\n        tr.appendChild(td);\n      }\n    );\n    bodyFragment.appendChild(tr);\n  });\n\n  tableBody.innerHTML = '';\n  tableBody?.appendChild(bodyFragment);\n}\n\nfunction updatePaginationInfo(totalItems, currentPage, totalPages) {\n  // Update page and record info\n  const startRecord = (currentPage - 1) * rowsPerPage + 1;\n  const endRecord = Math.min(currentPage * rowsPerPage, totalItems);\n  firstBtn.disabled = currentPage === 1;\n  prevBtn.disabled = currentPage === 1;\n  nextBtn.disabled = currentPage === totalPages;\n  lastBtn.disabled = currentPage === totalPages;\n  pageInput.max = totalPages;\n  pageInput.value = currentPage;\n  totalPagesSpan.textContent = totalPages;\n  pageInfo.textContent = `Showing ${startRecord} to ${endRecord} of ${totalItems} records`;\n}\n\nfunction sortTable(column) {\n  if (sortColumn === column) {\n    sortDirection = -sortDirection; // Toggle sort direction\n  } else {\n    sortDirection = 1; // Default to ascending\n  }\n  sortColumn = column;\n\n  fetchAndDisplayData();\n}\n\nfunction debounce(func, delay) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), delay);\n  };\n}\n\ninitTable();\n"],
  "mappings": "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",
  "names": ["table", "tableHead", "tableBody", "columnsAttr", "apiUrl", "firstBtn", "prevBtn", "nextBtn", "lastBtn", "pagination", "pageInput", "pageInfo", "recordsPerPageSelect", "totalPagesSpan", "filterSelect", "currentPage", "rowsPerPage", "totalPages", "columns", "allData", "sortDirection", "sortColumn", "initializePager", "fetchAndDisplayData", "setupPageInput", "e", "_a", "page", "initTable", "debounce", "__async", "optionsFragment", "col", "filterOpt", "searchQuery", "params", "response", "payload", "total_items", "total_pages", "data", "createTable", "updatePaginationInfo", "error", "headerRow", "th", "sortTable", "bodyFragment", "row", "tr", "td", "totalItems", "startRecord", "endRecord", "column", "func", "delay", "timeout", "args"]
}
