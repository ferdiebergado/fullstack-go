{
  "version": 3,
  "sources": ["../../../assets/js/config.js", "../../../assets/js/components/notification.js", "../../../assets/js/form.js", "../../../assets/js/components/dialog.js", "../../../assets/js/components/select.js", "../../../assets/js/host.js", "../../../assets/js/venue.js", "../../../assets/js/activity/create.js"],
  "sourcesContent": ["// @ts-check\nconst inputErrorClass = 'has-error';\nconst successBgClass = 'alert-success';\nconst errorBgClass = 'alert-error';\nconst errorTextClass = 'form-error';\n\nexport { inputErrorClass, successBgClass, errorBgClass, errorTextClass };\n", "// @ts-check\nimport { errorBgClass, successBgClass } from '../config.js';\n\n/**\n * Displays a notification on success or error.\n * @param {string} message\n * @param {string} type\n */\nexport function showNotification(message, type) {\n  const notification = document.getElementById('notification');\n  const header = document.getElementById('notification-header');\n  const body = document.getElementById('notification-message');\n\n  if (notification && header && body) {\n    if (type === 'success') {\n      header.textContent = 'Action Completed';\n      notification.classList.remove(errorBgClass);\n      notification.classList.add(successBgClass);\n    } else {\n      header.textContent = 'Action Failed';\n      notification.classList.remove(successBgClass);\n      notification.classList.add(errorBgClass);\n    }\n\n    body.textContent = message;\n    notification.style.display = 'block';\n  }\n}\n", "// @ts-check\nimport { inputErrorClass } from './config.js';\nimport { showNotification } from './components/notification.js';\n\n/**\n * Sends a request and handles form submission.\n * @param {HTMLFormElement} form\n * @param {Function} cb\n */\nexport async function submitForm(form, cb) {\n  clearFormErrors(form);\n\n  const formData = new FormData(form);\n  const actionUrl = form.getAttribute('action');\n\n  /** @type {HTMLInputElement|null} */\n  const methodInput = form.querySelector('input[name=\"_method\"]');\n\n  let method = 'POST';\n\n  if (methodInput) method = methodInput.value.toUpperCase();\n\n  // Convert FormData to a plain object\n  const payload = {};\n\n  formData.forEach((value, key) => {\n    // Convert numeric fields manually\n    if (key.endsWith('_id')) {\n      payload[key] = Number(value); // Convert to number\n    } else {\n      payload[key] = value; // Keep as string\n    }\n  });\n\n  try {\n    const response = await fetch(actionUrl, {\n      method,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload),\n    });\n\n    /** @type {import('./typedefs').ApiResponse} */\n    const { errors, message, data } = await response.json();\n\n    if (!response.ok) {\n      if (errors) displayFormErrors(form, errors);\n\n      showNotification(message, 'error');\n    } else {\n      showNotification(message, 'success');\n\n      if (method !== 'PUT') form.reset();\n      cb(data);\n    }\n  } catch (error) {\n    showNotification('An error occurred. Please try again.', 'error');\n  }\n}\n\n/**\n *\n * @param {HTMLFormElement} form\n * @param {import(\"./typedefs\").ValidationError[]} errors\n */\nfunction displayFormErrors(form, errors) {\n  errors.forEach(({ field, error }) => {\n    const input = form.querySelector(`[name=\"${field}\"]`);\n    if (input) {\n      const helpText = input.nextElementSibling;\n      input.classList.add(inputErrorClass);\n      if (helpText) helpText.textContent = error;\n    }\n  });\n}\n\n/**\n * Removes the error styles from the form inputs.\n * @param {HTMLFormElement} form\n */\nfunction clearFormErrors(form) {\n  form.querySelectorAll('.' + inputErrorClass).forEach((input) => {\n    input.classList.remove(inputErrorClass);\n    const nextEl = input.nextElementSibling;\n    if (nextEl) nextEl.textContent = '';\n  });\n}\n", "// @ts-check\n/**\n * Mounts a dialog for select elements.\n * @param {string} dialogId\n * @param {HTMLSelectElement} select\n */\nexport function mountDialogForSelect(dialogId, select) {\n  /** @type {HTMLDialogElement} */\n  const dialog = document.getElementById(dialogId);\n  const dialogClose = dialog.querySelector('#dialog-close');\n\n  dialogClose?.addEventListener('click', () => dialog?.close());\n  window.addEventListener('click', (event) => {\n    if (event.target === dialog) dialog.close();\n  });\n\n  select?.addEventListener('change', showDialog);\n  select?.addEventListener('click', showDialog);\n\n  function showDialog() {\n    const optionValue = select.options[select.selectedIndex].value;\n    if (optionValue === 'add') {\n      dialog?.showModal();\n    }\n  }\n\n  return dialog;\n}\n", "// @ts-check\n/**\n * Updates the select element with new options.\n * @param {HTMLSelectElement} select\n * @param {Object} detail\n */\nexport function updateSelect(select, detail) {\n  const options = Array.from(select.options).slice(1);\n\n  const newOption = document.createElement('option');\n  newOption.value = detail.id.toString();\n  newOption.text = detail.name;\n  newOption.selected = true;\n  options.push(newOption);\n  options.sort((a, b) => a.text.localeCompare(b.text));\n\n  const firstOption = select.options[0];\n  select.innerHTML = '';\n  select.add(firstOption);\n  options.forEach((option) => select.add(option));\n}\n", "// @ts-check\n\nimport { mountDialogForSelect } from './components/dialog.js';\nimport { updateSelect } from './components/select.js';\nimport { submitForm } from './form.js';\n\n/** @type {HTMLFormElement} */\nconst createHostForm = document.getElementById('create-host-form');\n\n/** @type {HTMLSelectElement} */\nconst hostSelect = document.getElementById('host_id');\n\nconst hostDialog = mountDialogForSelect('create-host-dialog', hostSelect);\n\nexport function watchHost() {\n  hostSelect?.addEventListener(\n    'HostCreated',\n    /** @param {import('./typedefs.js').MyCustomEventInit} event */\n    function (event) {\n      updateSelect(this, event.detail);\n    }\n  );\n}\n\nexport function handleHostForm() {\n  createHostForm?.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    submitForm(this, (data) => {\n      hostSelect?.dispatchEvent(\n        new CustomEvent('HostCreated', { detail: data })\n      );\n      hostDialog.close();\n    });\n  });\n}\n", "// @ts-check\n\nimport { mountDialogForSelect } from './components/dialog.js';\nimport { submitForm } from './form.js';\nimport { updateSelect } from './components/select.js';\n\n/** @type {HTMLFormElement} */\nconst createVenueForm = document.getElementById('create-venue-form');\n\n/** @type {HTMLSelectElement} */\nconst venueSelect = document.getElementById('venue_id');\n\nexport function handleVenueForm() {\n  createVenueForm?.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    submitForm(this, (data) => {\n      venueSelect?.dispatchEvent(\n        new CustomEvent('VenueCreated', { detail: data })\n      );\n      venueDialog.close();\n    });\n  });\n}\n\nconst venueDialog = mountDialogForSelect('create-venue-dialog', venueSelect);\n\nexport function watchVenue() {\n  venueSelect?.addEventListener(\n    'VenueCreated',\n    /** @param {import('./typedefs.js').MyCustomEventInit} event */ function (\n      event\n    ) {\n      updateSelect(this, event.detail);\n    }\n  );\n}\n", "// @ts-check\n\nimport { submitForm } from '../form.js';\nimport { handleHostForm, watchHost } from '../host.js';\nimport { handleVenueForm, watchVenue } from '../venue.js';\n\n/** @type {HTMLFormElement} */\nconst createActivityForm = document.getElementById('create-activity-form');\n\ncreateActivityForm?.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  submitForm(this, () => {});\n});\n\nhandleVenueForm();\nhandleHostForm();\nwatchVenue();\nwatchHost();\n"],
  "mappings": "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",
  "names": []
}
